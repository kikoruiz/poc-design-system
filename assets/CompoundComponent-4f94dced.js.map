{"version":3,"file":"CompoundComponent-4f94dced.js","sources":["../../documentation/contributing/CompoundComponent.mdx"],"sourcesContent":["import { Meta } from '@storybook/blocks'\nimport { StoryHeading } from '@devtools/StoryHeading'\n\n<Meta title=\"Contributing/Compound Component\" />\n\n# Compound component\n\nIf your organism is composed of more than one visual element (component), you MUST implement it using the\n`compound component pattern`.\n\n> The compound component pattern typically comes in handy with larger components that have related child components that we also want to configure.\n> Instead of having props defined on the main wrapper of your organism that exist just to pass down to its internal children, we render the children directly.\n\n**The compound component pattern is the pattern to use when creating a new Brikke\norganism. We took a Tabs organism as an example in the following section, but this\npattern can be applied to any organism.**\n\n<StoryHeading label=\"Using a compound component\" />\n\n```jsx title=\"/src/MyPage/MyTabs/index.tsx\"\nimport { MyTabs } from '@ds-name/tabs'\n\nconst MyTabs = () => {\n  return (\n    <Tabs defaultValue=\"tab1\">\n      <Tabs.List>\n        <Tabs.Trigger value=\"tab1\">Inbox</Tabs.Trigger>\n        <Tabs.Trigger value=\"tab2\">Today</Tabs.Trigger>\n        <Tabs.Trigger value=\"tab3\">Upcoming</Tabs.Trigger>\n      </Tabs.List>\n      <Tabs.Content value=\"tab1\">Your inbox is empty</Tabs.Content>\n      <Tabs.Content value=\"tab2\">Make some coffee</Tabs.Content>\n      <Tabs.Content value=\"tab3\">Order more coffee</Tabs.Content>\n    </Tabs>\n  )\n}\n```\n\n<StoryHeading label=\"Implementation\" />\n\n```jsx title=\"/packages/tabs/src/index.tsx\"\nimport { TabsList as List } from './List'\nimport { TabsTrigger as Trigger } from './Trigger'\nimport { TabsContent as Content } from './Content'\nimport { TabsRoot as Root } from './Root'\n\n// we have to override the \"displayName\" values here,\n// in order to make it work with ReactLiveBlock\nRoot.displayName = 'Tabs' // <-  the Root Component must be the first to be set ðŸ¤·\nTrigger.displayName = 'Tabs.Trigger'\nList.displayName = 'Tabs.List'\nContent.displayName = 'Tabs.Content'\n\nexport const Tabs = Object.assign(Root, {\n  List,\n  Trigger,\n  Content,\n})\n```\n\n<StoryHeading label=\"Explanation\" />\n\n- `Tabs` is the Main wrapper. It acts as a context provider so that its children can communicate with each other without relying on props. The context is optional, for simpler organisms, you might not need it.\n- `Object.assign` is then used to attach molecules to the compound organism `Tabs`. It allows us to do `<Tabs.List />, <Tabs.Trigger />, etc` to use an atom. Note that typescript likes this approach better and merge the types correctly without explicit typing.\n- **No `default` export**. This is for better discoverability.\n  See [why in details](https://basarat.gitbook.io/typescript/main-1/defaultisbad). Optionally, this is where you can also export your types/constants.\n\n<StoryHeading label=\"Benefits\" />\n\n<StoryHeading label=\"Discoverability\" heading=\"h3\" />\n\n- Typing \"`Tabs.`\" will autocomplete the molecules to the developer. He/she does not need to know their name to discover them (`Tabs.List`, `Tabs.Trigger`, etc).\n- The JSDoc comments above each atom will be visible in the IDE.\n- A link to the ZeroHeight specifications is accessible from the main wrapper of the organism.\n- It needs a single import `import { Tabs } from '@ds-name/tabs` to work. Instead of something like `import { Tabs, TabsTrigger, TabsList, etc... }`\n\n<StoryHeading label=\"Composability\" heading=\"h3\" />\n\nComposability comes from the fact that your organism is comprised of multiple components, instead of being a monolithic organism.\n\n- You can intertwine the component's molecules with custom HTML for more flexibility.\n- You can cherry-pick which molecules of the organism you will use.\n- It avoids props drilling (an organism/molecule passing props to its children and so on).\n"],"names":["MDXContent","props","MDXLayout","_provideComponents","_jsx","_createMdxContent","_components","_jsxs","_Fragment","Meta","StoryHeading"],"mappings":"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"}