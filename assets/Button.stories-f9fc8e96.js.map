{"version":3,"file":"Button.stories-f9fc8e96.js","sources":["../../packages/components/button/src/Button.variants.ts","../../packages/components/button/src/Button.tsx","../../packages/components/button/stories/Button.stories.tsx"],"sourcesContent":["import { cva, VariantProps } from 'class-variance-authority'\n\nexport const buttonVariants = cva(['spark-Button'], {\n  variants: {\n    disabled: {\n      true: ['is-disabled'],\n    },\n    intent: {\n      primary: ['spark-Button--primary'],\n      secondary: ['spark-Button--secondary'],\n    },\n    size: {\n      small: ['spark-Button--small'],\n      medium: ['spark-Button--medium'],\n      large: ['spark-Button--large'],\n    },\n  },\n  defaultVariants: {\n    intent: 'primary',\n    size: 'small',\n  },\n  compoundVariants: [\n    {\n      intent: 'primary',\n      size: 'small',\n      disabled: true,\n      className: 'spark-Button--variantOne',\n    },\n  ],\n})\n\nexport type ButtonVariantsProps = VariantProps<typeof buttonVariants>\n","import './Button.styles.css'\n\nimport { ComponentPropsWithoutRef, PropsWithChildren } from 'react'\n\nimport { buttonVariants, ButtonVariantsProps } from './Button.variants'\n\ninterface Props extends ButtonVariantsProps, ComponentPropsWithoutRef<'button'> {\n  disabled?: boolean\n}\n\nexport function Button({\n  color = 'gray',\n  children,\n  disabled = false,\n  intent = 'primary',\n  size = 'small',\n  ...rest\n}: PropsWithChildren<Props>) {\n  const buttonHtmlProps = { ...rest, disabled }\n\n  return (\n    <button\n      className={buttonVariants({\n        intent,\n        size,\n        disabled: !!disabled,\n      })}\n      {...buttonHtmlProps}\n    >\n      {children}\n    </button>\n  )\n}\n","import { Stack } from '@components/stack'\nimport { ReactLiveBlock } from '@devtools/ReactLiveBlock'\n\nimport { Button } from '../src/'\n\nexport const Variants = () => (\n  <ReactLiveBlock scope={{ Button, Stack }}>\n    <Stack alignItems=\"end\" gap=\"m\">\n      <Button intent=\"primary\">primary button</Button>\n      <Button intent=\"secondary\">secondary button</Button>\n    </Stack>\n  </ReactLiveBlock>\n)\n\nexport const Sizes = () => (\n  <ReactLiveBlock scope={{ Button, Stack }}>\n    <Stack alignItems=\"end\" gap=\"m\">\n      <Button size=\"small\">small button</Button>\n      <Button size=\"medium\">medium button</Button>\n      <Button size=\"large\">large button</Button>\n    </Stack>\n  </ReactLiveBlock>\n)\n"],"names":["buttonVariants","cva","Button","color","children","disabled","intent","size","rest","buttonHtmlProps","jsx","Variants","ReactLiveBlock","Stack","jsxs","Sizes"],"mappings":"4KAEO,MAAMA,EAAiBC,EAAI,CAAC,cAAc,EAAG,CAClD,SAAU,CACR,SAAU,CACR,KAAM,CAAC,aAAa,CACtB,EACA,OAAQ,CACN,QAAS,CAAC,uBAAuB,EACjC,UAAW,CAAC,yBAAyB,CACvC,EACA,KAAM,CACJ,MAAO,CAAC,qBAAqB,EAC7B,OAAQ,CAAC,sBAAsB,EAC/B,MAAO,CAAC,qBAAqB,CAC/B,CACF,EACA,gBAAiB,CACf,OAAQ,UACR,KAAM,OACR,EACA,iBAAkB,CAChB,CACE,OAAQ,UACR,KAAM,QACN,SAAU,GACV,UAAW,0BACb,CACF,CACF,CAAC,ECnBM,SAAAC,EAAA,CAAgB,MAAAC,EAAA,OACb,SAAAC,EACR,SAAAC,EAAA,GACW,OAAAC,EAAA,UACF,KAAAC,EAAA,QACF,GAAAC,CAET,EAAA,CACE,MAAAC,EAAA,CAAA,GAAAD,EAAA,SAAAH,CAAA,EAEA,OAAAK,EACE,SAAC,CAAA,UAAAV,EAAA,CAC2B,OAAAM,EACxB,KAAAC,EACA,SAAA,CAAA,CAAAF,CACY,CAAA,EACb,GAAAI,EACG,SAAAL,CAEH,CAAA,CAGP,weC3BO,MAAMO,EAAW,IACrBD,EAAAE,EAAA,CAAe,MAAO,CAAE,OAAAV,EAAQ,MAAAW,CAAM,EACrC,SAACC,EAAAD,EAAA,CAAM,WAAW,MAAM,IAAI,IAC1B,SAAA,CAACH,EAAAR,EAAA,CAAO,OAAO,UAAU,SAAc,iBAAA,EACtCQ,EAAAR,EAAA,CAAO,OAAO,YAAY,SAAgB,mBAAA,CAAA,CAAA,CAC7C,CACF,CAAA,EAGWa,EAAQ,IAClBL,EAAAE,EAAA,CAAe,MAAO,CAAE,OAAAV,EAAQ,MAAAW,CAAM,EACrC,SAACC,EAAAD,EAAA,CAAM,WAAW,MAAM,IAAI,IAC1B,SAAA,CAACH,EAAAR,EAAA,CAAO,KAAK,QAAQ,SAAY,eAAA,EAChCQ,EAAAR,EAAA,CAAO,KAAK,SAAS,SAAa,gBAAA,EAClCQ,EAAAR,EAAA,CAAO,KAAK,QAAQ,SAAY,eAAA,CAAA,CAAA,CACnC,CACF,CAAA"}